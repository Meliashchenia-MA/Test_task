"""
Django settings for test_project project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from django.urls import reverse_lazy


BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LOGOUT_REDIRECT_URL = '/login/'

SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'test_project.urls'

TEMPLATE_DIRS = (

)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['main/templates'],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = reverse_lazy("main:profile")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'debug_only': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'console_formatter': {
            'format': '[{levelname}] ({asctime} - {module}) ({filename}:{lineno} - {funcName}): {message}',
            'datefmt': '%H:%M:%S',
            'style': '{',
        },
        'debugger': {
            'format': '[{levelname}]: {message}',
            'style': '{',
        },

        'file_formatter': {
            'format': '[{levelname}] ({asctime} - {module} (PID: {process:d}, THREAD: {thread:d})): {message}',
            'datefmt': '%Y-%m-%d %H:%M:%S',
            'style': '{',
        },
        'json_formatter': {
            'format': '{'
                      '"level": "%(levelname)s", '
                      '"time": "%(asctime)s", '
                      '"module": "%(module)s", '
                      '"pid": %(process)d, '
                      '"thread": %(thread)d, '
                      '"text": "%(message)s", '
                      '"filename": "%(filename)s", '
                      '"line": %(lineno)d, '
                      '"func": "%(funcName)s"'
                      '}',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'filters': ['debug_only'],
            'formatter': 'console_formatter',
            'level': 'DEBUG',
        },
        'debugger': {
            'class': 'logging.StreamHandler',
            'filters': ['debug_only'],
            'formatter': 'debugger',
            'level': 'DEBUG',
        },
        'info': {
            'class': 'logging.FileHandler',
            'formatter': 'file_formatter',
            'filename': os.path.join(BASE_DIR, 'logs', 'info.log'),
            'level': 'INFO',
        },
        'error': {
            'class': 'logging.FileHandler',
            'formatter': 'file_formatter',
            'filename': os.path.join(BASE_DIR, 'logs', 'error.log'),
            'level': 'ERROR',
        },
        'info_json': {
            'class': 'logging.FileHandler',
            'formatter': 'json_formatter',
            'filename': os.path.join(BASE_DIR, 'logs', 'info_json.log'),
            'level': 'INFO',
        },
        'error_json': {
            'class': 'logging.FileHandler',
            'formatter': 'json_formatter',
            'filename': os.path.join(BASE_DIR, 'logs', 'error_json.log'),
            'level': 'ERROR',
        },
    },
    'loggers': {
        'debugger': {
            'handlers': ['debugger'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'all': {
            'handlers': ['console', 'info', 'error', 'info_json', 'error_json'],
            'level': 'DEBUG',
        },
        'cron_tasks': {
            'handlers': ['info', 'error', 'info_json', 'error_json'],
            'level': 'INFO',
        },
        'django.request': {
            'handlers': ['console', 'error_json'],
            'level': 'ERROR',
            'propagate': True,
        },
        'sentry_sdk': {'level': 'ERROR', 'handlers': ['console'], 'propagate': False},
    },
}

AUTH_USER_MODEL = "main.User"
